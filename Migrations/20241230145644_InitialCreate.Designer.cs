// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OllamaSemanticApi.Models;

#nullable disable

namespace OllamaSemanticApi.Migrations
{
    [DbContext(typeof(DatabaseTestContext))]
    [Migration("20241230145644_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OllamaSemanticApi.Models.Class", b =>
                {
                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassId")
                        .HasName("Classes_pk");

                    b.HasIndex("TeacherId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("OllamaSemanticApi.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("StudentId")
                        .HasName("Students_pk");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("OllamaSemanticApi.Models.StudentClass", b =>
                {
                    b.Property<Guid>("StudentClassesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentClassesId")
                        .HasName("StudentClasses_pk");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentClasses");
                });

            modelBuilder.Entity("OllamaSemanticApi.Models.Teacher", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId")
                        .HasName("Teachers_pk");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("OllamaSemanticApi.Models.Class", b =>
                {
                    b.HasOne("OllamaSemanticApi.Models.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherId")
                        .IsRequired()
                        .HasConstraintName("Classes_Teach_fk");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("OllamaSemanticApi.Models.StudentClass", b =>
                {
                    b.HasOne("OllamaSemanticApi.Models.Class", "Class")
                        .WithMany("StudentClasses")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("StudentClasses_Classes_ClassId_fk");

                    b.HasOne("OllamaSemanticApi.Models.Student", "Student")
                        .WithMany("StudentClasses")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("StudentClasses_Students_StudentId_fk");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("OllamaSemanticApi.Models.Class", b =>
                {
                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("OllamaSemanticApi.Models.Student", b =>
                {
                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("OllamaSemanticApi.Models.Teacher", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
